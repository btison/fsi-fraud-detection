apiVersion: v1
kind: List
items:  
  - kind: ClusterTask
    apiVersion: tekton.dev/v1beta1
    metadata:
      name: run-notebook
    spec:
      params:
        - name: NOTEBOOKS
          type: string
          description: A list of Jupyter Notebooks to run.
        - name: PATH_CONTEXT
          description: The location of the path to run s2i from.
          default: .
          type: string
        - name: EXTRA_ENV
          type: string
        - name: PAPERMILL_VERSION
          description: The version of Papermill to install.
          default: 2.3.4
      steps:
        - script: >
            #!/usr/bin/env sh

            set -eu

            if [[ ! -z "$PARAM_EXTRA_ENV" ]] ; then
              echo "exporting EXTRA_ENV"

              IFS=', ' read -r -a array <<< "$PARAM_EXTRA_ENV"

              for element in "${array[@]}"
              do
                  echo "$element"
                  export "$element"
              done
            fi

            cd $(params.PATH_CONTEXT)

            pip install -r requirements.txt

            pip install papermill==$(params.PAPERMILL_VERSION)

            papermill --log-output $(params.NOTEBOOKS) output.ipynb
          env:
          - name: PARAM_EXTRA_ENV
            value: $(params.EXTRA_ENV)
          #- name: PARAM_NOTEBOOKS
          #  value: $(params.NOTEBOOKS)
          #- name: PARAM_PAPERMILL_VERSION
          #  value: $(params.PAPERMILL_VERSION)
          image: ubi8/python-39
          name: 'run-notebooks'
          resources:
            requests:
              memory: 2Gi
              cpu: 1
            limits:
              memory: 4Gi
              cpu: 2
          volumeMounts:
            - mountPath: /gen-source
              name: gen-source
          workingDir: $(workspaces.source.path)
      volumes:
        - emptyDir: {}
          name: gen-source
      workspaces:
        - mountPath: /workspace/source
          name: source

  - kind: ClusterTask
    apiVersion: tekton.dev/v1beta1
    metadata:
      name: inspect
    spec:
      steps:
        - script: >
            #!/usr/bin/env sh

            set -eu

            ls -la /workspace/source
          image: ubi8/ubi-minimal
          name: ''
          resources: {}
          volumeMounts:
            - mountPath: /gen-source
              name: gen-source
          workingDir: $(workspaces.source.path)
      volumes:
        - emptyDir: {}
          name: gen-source
      workspaces:
        - mountPath: /workspace/source
          name: source